package com.mc.f_classformat;

public class Car {

	// 클래스	: 속성 + 기능
	//			: 필드 + 지역
	// 필드		: 지역이 아닌 영역, 메서드 바깥 영역. 필드에 존재하는 것(변수, 메서드)을 클래스의 멤버라고 칭함
	// 필드변수	: 필드에 선언되는 변수(=멤버변수)
	// 			  값을 명시적으로 할당하지 않으면 JVM 기본값으로 초기화
	//		- 인스턴스 변수 : non static 변수 / 클래스가 인스턴스화 되는 시점에 초기화 되는 변수, 같은 클래스여도 인스턴스마다 값이 개별적임 
	//		- 클래스 변수	: static 변수 / 클래스가 메모리에 올라가는 시점에 초기화 되는 변수, 클래스의 인스턴스들이 모두 공유하는 값을 저장
	
	// 지역		: 메서드 내부
	//			  메서드가 호출부에 의해 호출되는 시점에 메모리에 올라감, 메서드 실행 후 호출부로 돌아가는 시점에 메모리에서 내려감
	//		- 매개변수 : 호출부에서 전달하는 값을 받기위해 매서드 선언부에 선언되는 변수
	//		- 지역변수 : 메서드 내부에서 선언된 변수. 초기화를 해야지만 사용가능
				
	
	
	
	// 인스턴스 변수(String)
	private String name;
	private String color;
	private int speed;
	
	// 클래스 변수(static)
	private static final int MAX_SPEED = 250;
	private static int afterServicePreriod = 24;
	
	
	// 초기화 순서
	// 인스턴스 변수	: jvm 기본값 > 직접 할당한 값 > 초기화 블록 > 생성자
	// 클래스 변수		: jvm 기본값 > 직접 할당한 값 > stastic 초기화 블록
	
	{
		System.out.println("JVM 기본값 확인" + name);
		color = "red";
		name = "산타페";
		speed = 0;
		
		System.out.println("초기화 블록 이후 값" + name);
		System.out.println("==================================================");
	}
	
	static {
		System.out.println("==================초기화 순서 확인==================");
		System.out.println("static JVM 기본값 확인" + afterServicePreriod);
		
		afterServicePreriod = 24;
		
		System.out.println("static 초기화 블록 이후 값" + afterServicePreriod);
		System.out.println("==================================================");
	}
	
	
}
